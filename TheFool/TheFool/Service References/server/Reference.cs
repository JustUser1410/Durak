//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheFool.server {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial struct Card : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Server", ConfigurationName="server.IService", CallbackContract=typeof(TheFool.server.IServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="Server/IService/joinGame", ReplyAction="Server/IService/joinGameResponse")]
        int joinGame();
        
        [System.ServiceModel.OperationContractAttribute(Action="Server/IService/joinGame", ReplyAction="Server/IService/joinGameResponse")]
        System.Threading.Tasks.Task<int> joinGameAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="Server/IService/play")]
        void play(int playerID, TheFool.server.Card card);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="Server/IService/play")]
        System.Threading.Tasks.Task playAsync(int playerID, TheFool.server.Card card);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="Server/IService/startGame")]
        void startGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="Server/IService/startTurn")]
        void startTurn(TheFool.server.Card[] cardsOnDeck);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="Server/IService/endGame")]
        void endGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="Server/IService/drawCards")]
        void drawCards(TheFool.server.Card[] cards);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : TheFool.server.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.DuplexClientBase<TheFool.server.IService>, TheFool.server.IService {
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int joinGame() {
            return base.Channel.joinGame();
        }
        
        public System.Threading.Tasks.Task<int> joinGameAsync() {
            return base.Channel.joinGameAsync();
        }
        
        public void play(int playerID, TheFool.server.Card card) {
            base.Channel.play(playerID, card);
        }
        
        public System.Threading.Tasks.Task playAsync(int playerID, TheFool.server.Card card) {
            return base.Channel.playAsync(playerID, card);
        }
    }
}
